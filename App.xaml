<Application x:Class="Project_Hotel.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Project_Hotel"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <Style x:Key="room_occupancy_style" TargetType="{x:Type ListViewItem}">
            <Setter Property="Margin" Value="1"/>
            <!--<Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border 
                            Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="2,12,2,0"
                            Width="99"
                            Height="99"
                            VerticalAlignment="Center"
                            CornerRadius="2">
                            <StackPanel VerticalAlignment="Top">
                                <TextBlock Text="{Binding roomNumber}" FontWeight="Bold" VerticalAlignment="Top" TextWrapping="Wrap" FontFamily="Consolas" FontSize="16" TextAlignment="Center"/>
                                <StackPanel>
                                    <Viewbox VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                        <TextBlock Text="{Binding guestFirstName}" VerticalAlignment="Top" Width="90" TextWrapping="NoWrap" FontFamily="Gill Sans MT" FontSize="13" TextAlignment="Center"/>
                                    </Viewbox>
                                    <Viewbox VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                        <TextBlock Text="{Binding guestLastName}" VerticalAlignment="Center" Width="90" TextWrapping="NoWrap" FontFamily="Gill Sans MT" FontSize="13" TextAlignment="Center"/>
                                    </Viewbox>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=roomType}" Value="Single">
                    <Setter Property="BorderBrush" Value="#FF309919"/>
                    <Setter Property="BorderThickness" Value="3"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=roomType}" Value="Double">
                    <Setter Property="BorderBrush" Value="#FF8104FF"/>
                    <Setter Property="BorderThickness" Value="3"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=roomType}" Value="Suite">
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="3"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=roomStatus}" Value="Occupied">
                    <Setter Property="Background" Value="{DynamicResource 80sRed}"/>
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=roomStatus}" Value="Available">
                    <Setter Property="Background" Value="{DynamicResource 80sBlue}"/>
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="datagrid_item" TargetType="{x:Type DataGridRow}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="AliceBlue"/>
                </Trigger>
                <DataTrigger Binding="{Binding roomStatus}" Value="Available">                   
                    <Setter Property="Background" Value="Transparent" />
                </DataTrigger>
                <DataTrigger Binding="{Binding roomStatus}" Value="Occupied">
                    <Setter Property="Background" Value="Yellow" />
                </DataTrigger>                
            </Style.Triggers>
        </Style>
        
        <LinearGradientBrush x:Key="80sBlue" StartPoint="0,0" EndPoint="50,50" MappingMode="Absolute">
            <GradientStop Color="#FF0088FF" Offset="0.0"/>
            <GradientStop Color="#FF0088FF" Offset="0.15"/>
            <GradientStop Color="White" Offset="0.17"/>
            <GradientStop Color="White" Offset="0.23"/>
            <GradientStop Color="#FF0088FF" Offset="0.25"/>
            <GradientStop Color="White" Offset="0.27"/>
            <GradientStop Color="White" Offset="0.34"/>
            <GradientStop Color="#FF0088FF" Offset="0.35"/>
            <GradientStop Color="White" Offset="0.36"/>
            <GradientStop Color="White" Offset="0.445"/>
            <GradientStop Color="#FF0088FF" Offset="0.45"/>
            <GradientStop Color="#0C0088FF" Offset="0.455"/>
            <GradientStop Color="#190088FF" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="80sRed" StartPoint="0,0" EndPoint="40,40" MappingMode="Absolute">
            <GradientStop Color="OrangeRed" Offset="0.0"/>
            <GradientStop Color="OrangeRed" Offset="0.20"/>
            <GradientStop Color="White" Offset="0.22"/>
            <GradientStop Color="White" Offset="0.24"/>
            <GradientStop Color="OrangeRed" Offset="0.26"/>
            <GradientStop Color="White" Offset="0.28"/>
            <GradientStop Color="White" Offset="0.32"/>
            <GradientStop Color="OrangeRed" Offset="0.33"/>
            <GradientStop Color="White" Offset="0.34"/>
            <GradientStop Color="White" Offset="0.40"/>
            <GradientStop Color="OrangeRed" Offset="0.41"/>
            <GradientStop Color="White" Offset="0.42"/>
            <GradientStop Color="White" Offset="1"/>
        </LinearGradientBrush>

        <ControlTemplate TargetType="Button" x:Key="myButtonLeftArrow">
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="SkyBlue"/>
                    <Setter Property="BorderBrush" Value="CadetBlue"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
            <Viewbox>
                <Path Fill="SteelBlue" Data="M 24 0 L 24 46 L 0 23 Z"/>
            </Viewbox>
        </ControlTemplate>
        <ControlTemplate TargetType="Button" x:Key="myButtonRightArrow">
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="SkyBlue"/>
                    <Setter Property="BorderBrush" Value="CadetBlue"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
            <Viewbox>
                <Path Fill="SteelBlue" Data="M 0 0 L 0 46 L 24 23 Z"/>
            </Viewbox>
        </ControlTemplate>
        <ControlTemplate TargetType="Button" x:Key="myBareButton">
            <Border Height="{TemplateBinding Height}"
                    Width="{TemplateBinding Width}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="Black"
                    BorderThickness="1"                    
                    CornerRadius="3">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="SkyBlue"/>
                    <Setter Property="BorderBrush" Value="CadetBlue"/>
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="CadetBlue"/>
                    <Setter Property="BorderBrush" Value="SkyBlue"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="LightSteelBlue"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="myBareToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"                                
                                BorderThickness="1"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#FF83D883"/>
                                <Setter Property="BorderBrush" Value="#FF6CB06C"/>
                                <Setter Property="Foreground" Value="#FFA1FF00"/>
                                <Setter Property="Content" Value="P"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Background" Value="#FFE67664"/>
                                <Setter Property="BorderBrush" Value="DarkRed"/>
                                <Setter Property="Foreground" Value="#FFFFC500"/>
                                <Setter Property="Content" Value="O"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Application.Resources>
</Application>
